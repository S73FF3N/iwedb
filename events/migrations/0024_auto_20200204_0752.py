# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2020-02-04 07:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0023_auto_20200117_1437'),
    ]

    operations = [
        migrations.AddField(
            model_name='date',
            name='comment_de',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Comment'),
        ),
        migrations.AddField(
            model_name='date',
            name='comment_en',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Comment'),
        ),
        migrations.AddField(
            model_name='date',
            name='date_de',
            field=models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Scheduled Date'),
        ),
        migrations.AddField(
            model_name='date',
            name='date_en',
            field=models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Scheduled Date'),
        ),
        migrations.AddField(
            model_name='date',
            name='execution_date_de',
            field=models.DateField(blank=True, null=True, verbose_name='Execution Date'),
        ),
        migrations.AddField(
            model_name='date',
            name='execution_date_en',
            field=models.DateField(blank=True, null=True, verbose_name='Execution Date'),
        ),
        migrations.AddField(
            model_name='date',
            name='part_of_contract_de',
            field=models.CharField(blank=True, choices=[('yes', 'yes'), ('no', 'no'), ('condition based', 'condition based'), ('non-recurrent', 'non-recurrent')], max_length=20, null=True, verbose_name='Part of Contract'),
        ),
        migrations.AddField(
            model_name='date',
            name='part_of_contract_en',
            field=models.CharField(blank=True, choices=[('yes', 'yes'), ('no', 'no'), ('condition based', 'condition based'), ('non-recurrent', 'non-recurrent')], max_length=20, null=True, verbose_name='Part of Contract'),
        ),
        migrations.AddField(
            model_name='date',
            name='status_de',
            field=models.CharField(choices=[('remaining', 'remaining'), ('ordered', 'ordered'), ('scheduled', 'scheduled'), ('executed', 'executed'), ('report received', 'report received'), ('invoice received', 'invoice received'), ('closed', 'closed')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='date',
            name='status_en',
            field=models.CharField(choices=[('remaining', 'remaining'), ('ordered', 'ordered'), ('scheduled', 'scheduled'), ('executed', 'executed'), ('report received', 'report received'), ('invoice received', 'invoice received'), ('closed', 'closed')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='done_de',
            field=models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Scheduled first execution'),
        ),
        migrations.AddField(
            model_name='event',
            name='done_en',
            field=models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Scheduled first execution'),
        ),
        migrations.AddField(
            model_name='event',
            name='duration_de',
            field=models.CharField(choices=[('years', 'years'), ('month', 'month'), ('days', 'days')], max_length=10, null=True, verbose_name='Duration'),
        ),
        migrations.AddField(
            model_name='event',
            name='duration_en',
            field=models.CharField(choices=[('years', 'years'), ('month', 'month'), ('days', 'days')], max_length=10, null=True, verbose_name='Duration'),
        ),
        migrations.AddField(
            model_name='event',
            name='every_count_de',
            field=models.PositiveIntegerField(null=True, verbose_name='Every'),
        ),
        migrations.AddField(
            model_name='event',
            name='every_count_en',
            field=models.PositiveIntegerField(null=True, verbose_name='Every'),
        ),
        migrations.AddField(
            model_name='event',
            name='for_count_de',
            field=models.PositiveIntegerField(null=True, verbose_name='for'),
        ),
        migrations.AddField(
            model_name='event',
            name='for_count_en',
            field=models.PositiveIntegerField(null=True, verbose_name='for'),
        ),
        migrations.AddField(
            model_name='event',
            name='time_interval_de',
            field=models.CharField(choices=[('years', 'years'), ('month', 'month'), ('days', 'days')], max_length=10, null=True, verbose_name='Time interval'),
        ),
        migrations.AddField(
            model_name='event',
            name='time_interval_en',
            field=models.CharField(choices=[('years', 'years'), ('month', 'month'), ('days', 'days')], max_length=10, null=True, verbose_name='Time interval'),
        ),
        migrations.AddField(
            model_name='event',
            name='title_de',
            field=models.CharField(choices=[('Recurring inspection', 'Recurring inspection'), ('Condition based inspection', 'Condition based inspection'), ('Gearbox endoscopic inspection', 'Gearbox endoscopic inspection'), ('Rotor blade inspection', 'Rotor blade inspection'), ('Safety inspection', 'Safety inspection'), ('Service lift maintenance', 'Service lift maintenance'), ('ZÜS service lift', 'ZÜS service lift'), ('General Overhaul Winch', 'General Overhaul Winch'), ('General Overhaul Deck Crane', 'General Overhaul Deck Crane'), ('Lattice tower inspection', 'Lattice tower inspection'), ('DGUV V3', 'DGUV V3')], max_length=50, null=True, verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='event',
            name='title_en',
            field=models.CharField(choices=[('Recurring inspection', 'Recurring inspection'), ('Condition based inspection', 'Condition based inspection'), ('Gearbox endoscopic inspection', 'Gearbox endoscopic inspection'), ('Rotor blade inspection', 'Rotor blade inspection'), ('Safety inspection', 'Safety inspection'), ('Service lift maintenance', 'Service lift maintenance'), ('ZÜS service lift', 'ZÜS service lift'), ('General Overhaul Winch', 'General Overhaul Winch'), ('General Overhaul Deck Crane', 'General Overhaul Deck Crane'), ('Lattice tower inspection', 'Lattice tower inspection'), ('DGUV V3', 'DGUV V3')], max_length=50, null=True, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='date',
            name='status',
            field=models.CharField(choices=[('remaining', 'remaining'), ('ordered', 'ordered'), ('scheduled', 'scheduled'), ('executed', 'executed'), ('report received', 'report received'), ('invoice received', 'invoice received'), ('closed', 'closed')], max_length=25),
        ),
        migrations.AlterField(
            model_name='event',
            name='title',
            field=models.CharField(choices=[('Recurring inspection', 'Recurring inspection'), ('Condition based inspection', 'Condition based inspection'), ('Gearbox endoscopic inspection', 'Gearbox endoscopic inspection'), ('Rotor blade inspection', 'Rotor blade inspection'), ('Safety inspection', 'Safety inspection'), ('Service lift maintenance', 'Service lift maintenance'), ('ZÜS service lift', 'ZÜS service lift'), ('General Overhaul Winch', 'General Overhaul Winch'), ('General Overhaul Deck Crane', 'General Overhaul Deck Crane'), ('Lattice tower inspection', 'Lattice tower inspection'), ('DGUV V3', 'DGUV V3')], max_length=50, verbose_name='Type'),
        ),
    ]
