# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2020-04-22 14:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('turbine', '0072_auto_20200320_1800'),
    ]

    operations = [
        migrations.AlterField(
            model_name='contract',
            name='active',
            field=models.BooleanField(default=True, verbose_name='Actice'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='additional_maintenance',
            field=models.BooleanField(default=False, help_text='Are additional scheduled maintenances (e.g. TypeIV) included?', verbose_name='Additional Maintenance'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='availability_type',
            field=models.CharField(blank=True, choices=[('time based', 'time based'), ('energy based', 'energy based')], max_length=20, null=True, verbose_name='Availabiltiy Type'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='average_remuneration',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Enter the average remuneration per year and WTG of this contract', max_digits=8, null=True, verbose_name='Average Remuneration'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='certified_body_inspection_service_lift',
            field=models.BooleanField(default=False, help_text='Is the inspection of the service lift by a certified body (ZÃœS) included?', verbose_name='Certified Body Inspection Service Lift'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='created',
            field=models.DateField(auto_now_add=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='dwt_responsible',
            field=models.ForeignKey(blank=True, help_text='Who is the responsible Customer Relation Manager?', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='DWT Responsible'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='electrical_inspection',
            field=models.BooleanField(default=False, help_text='Are the electrical inspection (DGUV V3) included?', verbose_name='Electrical Inspection'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='end_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the effective end date of this contract', null=True, verbose_name='End Date'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='exclusions',
            field=models.ManyToManyField(blank=True, help_text='Which components are exluded from the scope?', to='turbine.Exclusion', verbose_name='Exclusions'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='external_damages',
            field=models.BooleanField(default=False, help_text='Is an insurance for external damages included?', verbose_name='External Damages'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='farm_availability',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Availability Guarantee for the wind farm in %', max_digits=4, null=True, verbose_name='Farm Availability'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='file',
            field=models.FileField(blank=True, help_text='Attach the pdf file of the contract', null=True, upload_to='contract_files/%Y/%m/%d/', verbose_name='File'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='main_components',
            field=models.BooleanField(default=False, help_text='Are main components included?', verbose_name='Main Components'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='overhaul_working_equipment',
            field=models.BooleanField(default=False, help_text='Is the general overhaul of working equipment (winch, on-board crane, etc.) included?', verbose_name='Overhaul Working Equipment'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='periodic_inspection_wtg',
            field=models.BooleanField(default=False, help_text='Are periodic inspections of the WTG (WKP) included?', verbose_name='Periodic Inspection WTG'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='pressure_vessels',
            field=models.BooleanField(default=False, help_text='Is the replacement of pressure vessels included?', verbose_name='Pressure Vessels'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='remote_control',
            field=models.BooleanField(default=False, help_text='Is remote control included?', verbose_name='Remote Control'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='rotor_blade_inspection',
            field=models.BooleanField(default=False, help_text='Are rotor blade inspections included?', verbose_name='Rotor Blade Inspection'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='safety_exchange',
            field=models.BooleanField(default=False, help_text='Is the exchange of safety equipment (PSE, fire extinguisher, etc.) included?', verbose_name='Safety Exchange'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='safety_inspection',
            field=models.BooleanField(default=False, help_text='Is the inspection of safety equipment (PSE, fire extinguisher, etc.) included?', verbose_name='Safety Inspection'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='safety_repairs',
            field=models.BooleanField(default=False, help_text='Is the repair of safety equipment (PSE, fire extinguisher, etc.) included?', verbose_name='Safety Repairs'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='scheduled_maintenance',
            field=models.BooleanField(default=False, help_text='Is scheduled maintenance included?', verbose_name='Scheduled Maintenance'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='service_lift_maintenance',
            field=models.BooleanField(default=False, help_text='Is service lift maintenance included?', verbose_name='Service Lift Maintenance'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='start_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, help_text='Enter the effective commencement date of this contract', null=True, verbose_name='Start Date'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='technical_operation',
            field=models.BooleanField(default=False, help_text='Is techncial operation included?', verbose_name='Technical Operation'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='termination_date',
            field=models.DateField(blank=True, help_text='Enter the date when the contract was terminated by the customer.', null=True, verbose_name='Termination Date'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='termination_reason',
            field=models.CharField(blank=True, choices=[('Closure of WTG / business', 'Closure of WTG / business'), ('Alteration of Contract', 'Alteration of Contract'), ('Competition', 'Competition'), ('Change of Ownership', 'Change of Ownership'), ('Breach of Agreement', 'Breach of Agreement'), ('Bankruptcy', 'Bankruptcy'), ('Corporate Structure', 'Corporate Structure')], help_text='Which reason lead to the termination of the contract?', max_length=30, null=True, verbose_name='Termination Reason'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='unscheduled_maintenance_material',
            field=models.BooleanField(default=False, help_text='Are materials for unscheduled maintenance included?', verbose_name='Unscheduled Maintenance Material'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='unscheduled_maintenance_personnel',
            field=models.BooleanField(default=False, help_text='Is personnel for unscheduled maintenance included?', verbose_name='Unscheduled Maintenance Personnel'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='updated',
            field=models.DateField(auto_now=True, verbose_name='Updated'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='videoendoscopic_inspection_gearbox',
            field=models.BooleanField(default=False, help_text='Are videoendoscopic inspections of the gearbox included?', verbose_name='Videoendoscopic Inspection Gearbox'),
        ),
        migrations.AlterField(
            model_name='contract',
            name='wtg_availability',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Availability Guarantee for single WTG in %', max_digits=4, null=True, verbose_name='WTG Availability'),
        ),
        migrations.AlterField(
            model_name='servicelocation',
            name='active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AlterField(
            model_name='servicelocation',
            name='created',
            field=models.DateField(auto_now_add=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='servicelocation',
            name='location_type',
            field=models.CharField(choices=[('External Storage', 'External Storage'), ('Engineering', 'Engineering'), ('Vehicle', 'Vehicle'), ('North-East', 'North-East'), ('North-West', 'North-West'), ('Head Quarter', 'Head Quarter'), ('South-East', 'South-East'), ('South-West', 'South-West'), ('South', 'South'), ('Middle', 'Middle'), ('Transfer Storage', 'Transfer Storage')], default='Vehicle', max_length=50, verbose_name='Location Type'),
        ),
        migrations.AlterField(
            model_name='servicelocation',
            name='postal_code',
            field=models.CharField(default='49082', max_length=20, verbose_name='Postal Code'),
        ),
        migrations.AlterField(
            model_name='servicelocation',
            name='supported_technology',
            field=models.ManyToManyField(to='polls.Manufacturer', verbose_name='Supported Technology'),
        ),
        migrations.AlterField(
            model_name='servicelocation',
            name='updated',
            field=models.DateField(auto_now=True, verbose_name='Updated'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='commisioning_day',
            field=models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], null=True, verbose_name='Commisioning Day'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='commisioning_month',
            field=models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True, verbose_name='Commisioning Month'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='commisioning_year',
            field=models.IntegerField(blank=True, choices=[(1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], null=True, verbose_name='Commisioning Year'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='developer',
            field=models.ManyToManyField(blank=True, help_text='Specify the company which developed the turbine', related_name='wec_developers', to='player.Player', verbose_name='Developer'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='dismantling_day',
            field=models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], null=True, verbose_name='Dismantling Day'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='dismantling_month',
            field=models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True, verbose_name='Dismantling Month'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='dismantling_year',
            field=models.IntegerField(blank=True, choices=[(1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], null=True, verbose_name='Dismantling Year'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='hub_height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Hub height in meters', max_digits=5, null=True, verbose_name='Hub Height'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='osm_id',
            field=models.CharField(blank=True, help_text='Openstreetmap ID', max_length=25, verbose_name='Openstreetmap'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='Specify the company which owns the turbine', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wec_owners', to='player.Player', verbose_name='Owner'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='repowered',
            field=models.BooleanField(default=False, help_text='If the turbine has been dismantled, has it been repowered afterwards?', verbose_name='Repowered'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='service',
            field=models.ManyToManyField(blank=True, help_text='Specify the company which currently services the turbine', related_name='wec_service_providers', to='player.Player', verbose_name='Service Company'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='turbine_id',
            field=models.CharField(db_index=True, help_text='If Turbine ID is unknown use this scheme: WindfarmName01. NEG turbines should be labeled by the Vestas abbreviation "V".', max_length=25, verbose_name='Turbine ID'),
        ),
        migrations.AlterField(
            model_name='turbine',
            name='wind_farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wind_farms.WindFarm', verbose_name='Wind Farm'),
        ),
    ]
